//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     GitVersion
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Lucile.Data.Metadata;

namespace Lucile.Data
{
    public abstract class EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
        {
            Entity = entity;
        }

        public IEntityMetadata Entity { get; }

        public abstract int KeyCount { get; }

        public abstract object GetValue(int index);

        public abstract void SetValue(int index, object value);

        public override int GetHashCode()
        {
            var result = Entity?.GetHashCode() ?? 0;

            for (int i = 0; i < KeyCount; i++)
            {
                result = result ^ (GetValue(i)?.GetHashCode()).GetValueOrDefault();
            }

            return result;
        }

        public override bool Equals(object obj)
        {
            var typed = obj as EntityKey;
            if (typed == null)
            {
                return false;
            }

            if (Object.Equals(typed.Entity, Entity))
            {
                if (typed.KeyCount == KeyCount)
                {
                    var areEqual = true;
                    for (int i = 0; i < KeyCount; i++)
                    {
                        areEqual = areEqual && object.Equals(typed.GetValue(i), GetValue(i));
                    }

                    return areEqual;
                }
            }

            return false;
        }

        public static Type Get(params Type[] types)
        {
            switch (types.Length)
            {
                case 1:
                    return typeof(EntityKey<>).MakeGenericType(types);
                case 2:
                    return typeof(EntityKey<,>).MakeGenericType(types);
                case 3:
                    return typeof(EntityKey<,,>).MakeGenericType(types);
                case 4:
                    return typeof(EntityKey<,,,>).MakeGenericType(types);
                case 5:
                    return typeof(EntityKey<,,,,>).MakeGenericType(types);
                case 6:
                    return typeof(EntityKey<,,,,,>).MakeGenericType(types);
                case 7:
                    return typeof(EntityKey<,,,,,,>).MakeGenericType(types);
                case 8:
                    return typeof(EntityKey<,,,,,,,>).MakeGenericType(types);
                case 9:
                    return typeof(EntityKey<,,,,,,,,>).MakeGenericType(types);
                case 10:
                    return typeof(EntityKey<,,,,,,,,,>).MakeGenericType(types);
                case 11:
                    return typeof(EntityKey<,,,,,,,,,,>).MakeGenericType(types);
                case 12:
                    return typeof(EntityKey<,,,,,,,,,,,>).MakeGenericType(types);
                case 13:
                    return typeof(EntityKey<,,,,,,,,,,,,>).MakeGenericType(types);
                case 14:
                    return typeof(EntityKey<,,,,,,,,,,,,,>).MakeGenericType(types);
                case 15:
                    return typeof(EntityKey<,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 16:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 17:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 18:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 19:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 20:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 21:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 22:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 23:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 24:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 25:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 26:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 27:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 28:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 29:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 30:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 31:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 32:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 33:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 34:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 35:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 36:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 37:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 38:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 39:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 40:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 41:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 42:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 43:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 44:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 45:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 46:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 47:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 48:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
                case 49:
                    return typeof(EntityKey<,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,>).MakeGenericType(types);
            }

            throw new ArgumentOutOfRangeException("A Maximum of 50 primary Columns is supported.");
        }
    }
}