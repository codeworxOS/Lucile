//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     GitVersion
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Lucile.Data.Metadata;

namespace Lucile.Data
{
    public class EntityKey<TKey0> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 1;
            }
        }

        public TKey0 Value0 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 2;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 3;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 4;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 5;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 6;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 7;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 8;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 9;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 10;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 11;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 12;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 13;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 14;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 15;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 16;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 17;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 18;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 19;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 20;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 21;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 22;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 23;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 24;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 25;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 26;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 27;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 28;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 29;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 30;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 31;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 32;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 33;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 34;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 35;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 36;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 37;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 38;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 39;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 40;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 41;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 42;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 43;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }
        public TKey42 Value42 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
                case 42: return Value42;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
                case 42: Value42 = (TKey42)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 44;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }
        public TKey42 Value42 { get; set; }
        public TKey43 Value43 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
                case 42: return Value42;
                case 43: return Value43;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
                case 42: Value42 = (TKey42)value; return;
                case 43: Value43 = (TKey43)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 45;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }
        public TKey42 Value42 { get; set; }
        public TKey43 Value43 { get; set; }
        public TKey44 Value44 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
                case 42: return Value42;
                case 43: return Value43;
                case 44: return Value44;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
                case 42: Value42 = (TKey42)value; return;
                case 43: Value43 = (TKey43)value; return;
                case 44: Value44 = (TKey44)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 46;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }
        public TKey42 Value42 { get; set; }
        public TKey43 Value43 { get; set; }
        public TKey44 Value44 { get; set; }
        public TKey45 Value45 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
                case 42: return Value42;
                case 43: return Value43;
                case 44: return Value44;
                case 45: return Value45;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
                case 42: Value42 = (TKey42)value; return;
                case 43: Value43 = (TKey43)value; return;
                case 44: Value44 = (TKey44)value; return;
                case 45: Value45 = (TKey45)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 47;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }
        public TKey42 Value42 { get; set; }
        public TKey43 Value43 { get; set; }
        public TKey44 Value44 { get; set; }
        public TKey45 Value45 { get; set; }
        public TKey46 Value46 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
                case 42: return Value42;
                case 43: return Value43;
                case 44: return Value44;
                case 45: return Value45;
                case 46: return Value46;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
                case 42: Value42 = (TKey42)value; return;
                case 43: Value43 = (TKey43)value; return;
                case 44: Value44 = (TKey44)value; return;
                case 45: Value45 = (TKey45)value; return;
                case 46: Value46 = (TKey46)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46, TKey47> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 48;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }
        public TKey42 Value42 { get; set; }
        public TKey43 Value43 { get; set; }
        public TKey44 Value44 { get; set; }
        public TKey45 Value45 { get; set; }
        public TKey46 Value46 { get; set; }
        public TKey47 Value47 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
                case 42: return Value42;
                case 43: return Value43;
                case 44: return Value44;
                case 45: return Value45;
                case 46: return Value46;
                case 47: return Value47;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
                case 42: Value42 = (TKey42)value; return;
                case 43: Value43 = (TKey43)value; return;
                case 44: Value44 = (TKey44)value; return;
                case 45: Value45 = (TKey45)value; return;
                case 46: Value46 = (TKey46)value; return;
                case 47: Value47 = (TKey47)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46, TKey47, TKey48> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 49;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }
        public TKey42 Value42 { get; set; }
        public TKey43 Value43 { get; set; }
        public TKey44 Value44 { get; set; }
        public TKey45 Value45 { get; set; }
        public TKey46 Value46 { get; set; }
        public TKey47 Value47 { get; set; }
        public TKey48 Value48 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
                case 42: return Value42;
                case 43: return Value43;
                case 44: return Value44;
                case 45: return Value45;
                case 46: return Value46;
                case 47: return Value47;
                case 48: return Value48;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
                case 42: Value42 = (TKey42)value; return;
                case 43: Value43 = (TKey43)value; return;
                case 44: Value44 = (TKey44)value; return;
                case 45: Value45 = (TKey45)value; return;
                case 46: Value46 = (TKey46)value; return;
                case 47: Value47 = (TKey47)value; return;
                case 48: Value48 = (TKey48)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

    public class EntityKey<TKey0, TKey1, TKey2, TKey3, TKey4, TKey5, TKey6, TKey7, TKey8, TKey9, TKey10, TKey11, TKey12, TKey13, TKey14, TKey15, TKey16, TKey17, TKey18, TKey19, TKey20, TKey21, TKey22, TKey23, TKey24, TKey25, TKey26, TKey27, TKey28, TKey29, TKey30, TKey31, TKey32, TKey33, TKey34, TKey35, TKey36, TKey37, TKey38, TKey39, TKey40, TKey41, TKey42, TKey43, TKey44, TKey45, TKey46, TKey47, TKey48, TKey49> : EntityKey
    {
        public EntityKey()
        {
        }

        public EntityKey(IEntityMetadata entity)
            : base(entity)
        {
        }

        public override int KeyCount
        {
            get
            {
                return 50;
            }
        }

        public TKey0 Value0 { get; set; }
        public TKey1 Value1 { get; set; }
        public TKey2 Value2 { get; set; }
        public TKey3 Value3 { get; set; }
        public TKey4 Value4 { get; set; }
        public TKey5 Value5 { get; set; }
        public TKey6 Value6 { get; set; }
        public TKey7 Value7 { get; set; }
        public TKey8 Value8 { get; set; }
        public TKey9 Value9 { get; set; }
        public TKey10 Value10 { get; set; }
        public TKey11 Value11 { get; set; }
        public TKey12 Value12 { get; set; }
        public TKey13 Value13 { get; set; }
        public TKey14 Value14 { get; set; }
        public TKey15 Value15 { get; set; }
        public TKey16 Value16 { get; set; }
        public TKey17 Value17 { get; set; }
        public TKey18 Value18 { get; set; }
        public TKey19 Value19 { get; set; }
        public TKey20 Value20 { get; set; }
        public TKey21 Value21 { get; set; }
        public TKey22 Value22 { get; set; }
        public TKey23 Value23 { get; set; }
        public TKey24 Value24 { get; set; }
        public TKey25 Value25 { get; set; }
        public TKey26 Value26 { get; set; }
        public TKey27 Value27 { get; set; }
        public TKey28 Value28 { get; set; }
        public TKey29 Value29 { get; set; }
        public TKey30 Value30 { get; set; }
        public TKey31 Value31 { get; set; }
        public TKey32 Value32 { get; set; }
        public TKey33 Value33 { get; set; }
        public TKey34 Value34 { get; set; }
        public TKey35 Value35 { get; set; }
        public TKey36 Value36 { get; set; }
        public TKey37 Value37 { get; set; }
        public TKey38 Value38 { get; set; }
        public TKey39 Value39 { get; set; }
        public TKey40 Value40 { get; set; }
        public TKey41 Value41 { get; set; }
        public TKey42 Value42 { get; set; }
        public TKey43 Value43 { get; set; }
        public TKey44 Value44 { get; set; }
        public TKey45 Value45 { get; set; }
        public TKey46 Value46 { get; set; }
        public TKey47 Value47 { get; set; }
        public TKey48 Value48 { get; set; }
        public TKey49 Value49 { get; set; }

        public override object GetValue(int index)
        {
            switch (index)
            {
                case 0: return Value0;
                case 1: return Value1;
                case 2: return Value2;
                case 3: return Value3;
                case 4: return Value4;
                case 5: return Value5;
                case 6: return Value6;
                case 7: return Value7;
                case 8: return Value8;
                case 9: return Value9;
                case 10: return Value10;
                case 11: return Value11;
                case 12: return Value12;
                case 13: return Value13;
                case 14: return Value14;
                case 15: return Value15;
                case 16: return Value16;
                case 17: return Value17;
                case 18: return Value18;
                case 19: return Value19;
                case 20: return Value20;
                case 21: return Value21;
                case 22: return Value22;
                case 23: return Value23;
                case 24: return Value24;
                case 25: return Value25;
                case 26: return Value26;
                case 27: return Value27;
                case 28: return Value28;
                case 29: return Value29;
                case 30: return Value30;
                case 31: return Value31;
                case 32: return Value32;
                case 33: return Value33;
                case 34: return Value34;
                case 35: return Value35;
                case 36: return Value36;
                case 37: return Value37;
                case 38: return Value38;
                case 39: return Value39;
                case 40: return Value40;
                case 41: return Value41;
                case 42: return Value42;
                case 43: return Value43;
                case 44: return Value44;
                case 45: return Value45;
                case 46: return Value46;
                case 47: return Value47;
                case 48: return Value48;
                case 49: return Value49;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
        public override void SetValue(int index, object value)
        {
            switch (index)
            {
                case 0: Value0 = (TKey0)value; return;
                case 1: Value1 = (TKey1)value; return;
                case 2: Value2 = (TKey2)value; return;
                case 3: Value3 = (TKey3)value; return;
                case 4: Value4 = (TKey4)value; return;
                case 5: Value5 = (TKey5)value; return;
                case 6: Value6 = (TKey6)value; return;
                case 7: Value7 = (TKey7)value; return;
                case 8: Value8 = (TKey8)value; return;
                case 9: Value9 = (TKey9)value; return;
                case 10: Value10 = (TKey10)value; return;
                case 11: Value11 = (TKey11)value; return;
                case 12: Value12 = (TKey12)value; return;
                case 13: Value13 = (TKey13)value; return;
                case 14: Value14 = (TKey14)value; return;
                case 15: Value15 = (TKey15)value; return;
                case 16: Value16 = (TKey16)value; return;
                case 17: Value17 = (TKey17)value; return;
                case 18: Value18 = (TKey18)value; return;
                case 19: Value19 = (TKey19)value; return;
                case 20: Value20 = (TKey20)value; return;
                case 21: Value21 = (TKey21)value; return;
                case 22: Value22 = (TKey22)value; return;
                case 23: Value23 = (TKey23)value; return;
                case 24: Value24 = (TKey24)value; return;
                case 25: Value25 = (TKey25)value; return;
                case 26: Value26 = (TKey26)value; return;
                case 27: Value27 = (TKey27)value; return;
                case 28: Value28 = (TKey28)value; return;
                case 29: Value29 = (TKey29)value; return;
                case 30: Value30 = (TKey30)value; return;
                case 31: Value31 = (TKey31)value; return;
                case 32: Value32 = (TKey32)value; return;
                case 33: Value33 = (TKey33)value; return;
                case 34: Value34 = (TKey34)value; return;
                case 35: Value35 = (TKey35)value; return;
                case 36: Value36 = (TKey36)value; return;
                case 37: Value37 = (TKey37)value; return;
                case 38: Value38 = (TKey38)value; return;
                case 39: Value39 = (TKey39)value; return;
                case 40: Value40 = (TKey40)value; return;
                case 41: Value41 = (TKey41)value; return;
                case 42: Value42 = (TKey42)value; return;
                case 43: Value43 = (TKey43)value; return;
                case 44: Value44 = (TKey44)value; return;
                case 45: Value45 = (TKey45)value; return;
                case 46: Value46 = (TKey46)value; return;
                case 47: Value47 = (TKey47)value; return;
                case 48: Value48 = (TKey48)value; return;
                case 49: Value49 = (TKey49)value; return;
            }

            throw new ArgumentOutOfRangeException(nameof(index), "Invalid Primary Key index.");
        }
    }

}